{"ast":null,"code":"var _jsxFileName = \"/Users/aidanmatchette/quebec/projects/netflix/netflix-clone/src/pages/signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\n/* eslint-disable */\n\nimport { useNavigate } from 'react-router-dom';\n/* eslint-enable*/\n\nimport { FirebaseContext } from '../context/firebase';\nimport { FooterContainer } from '../containers/footer';\nimport { HeaderContainer } from '../containers/header';\nimport { Form } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  /* eslint-disable */\n  const history = useNavigate();\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const [firstName, setFirstName] = useState('');\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  /* eslint-enable*/\n\n  const isInvalid = firstName === '' || password === '' || emailAddress === '';\n\n  const handleSignUp = event => {\n    event.preventDefault(); // do firebase stuff ROUTES\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Title, {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Form.Error, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Base, {\n          onSubmit: handleSignUp,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            placeholder: \"First Name\",\n            value: firstName,\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return setFirstName(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            placeholder: \"Email address\",\n            value: emailAddress,\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setEmailAddress(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            type: \"password\",\n            autoComplete: \"off\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: _ref3 => {\n              let {\n                target\n              } = _ref3;\n              return setPassword(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Submit, {\n            disabled: isInvalid,\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [\"Already a user? \", /*#__PURE__*/_jsxDEV(Form.Link, {\n            to: \"/signin\",\n            children: \"Sign in now.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.TextSmall, {\n          children: \"This page is protected by Google reCAPTCHA to ensure that you are not a bot. Learn more.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n\n_s(Signup, \"h7XXPTb3c1NwPPnDKGypmeo20Qw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","FirebaseContext","FooterContainer","HeaderContainer","Form","ROUTES","Signup","history","firebase","firstName","setFirstName","emailAddress","setEmailAddress","password","setPassword","error","setError","isInvalid","handleSignUp","event","preventDefault","target","value"],"sources":["/Users/aidanmatchette/quebec/projects/netflix/netflix-clone/src/pages/signup.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\n/* eslint-disable */\nimport { useNavigate } from 'react-router-dom'\n/* eslint-enable*/\nimport { FirebaseContext } from '../context/firebase'\nimport { FooterContainer } from '../containers/footer'\nimport { HeaderContainer } from '../containers/header'\nimport { Form } from '../components'\nimport * as ROUTES from '../constants/routes'\n\nexport default function Signup() {\n  /* eslint-disable */\n  const history = useNavigate()\n  const { firebase } = useContext(FirebaseContext)\n  const [firstName, setFirstName] = useState('')\n  const [emailAddress, setEmailAddress] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  /* eslint-enable*/\n\n  const isInvalid = firstName === '' || password === '' || emailAddress === ''\n\n  const handleSignUp = (event) => {\n    event.preventDefault()\n    // do firebase stuff ROUTES\n  }\n\n  return (\n    <>\n      <HeaderContainer>\n        <Form>\n          <Form.Title>Sign Up</Form.Title>\n          {error && <Form.Error>{error}</Form.Error>}\n\n          <Form.Base onSubmit={handleSignUp} method='POST'>\n            <Form.Input\n              placeholder='First Name'\n              value={firstName}\n              onChange={({ target }) => setFirstName(target.value)}\n            />\n            <Form.Input\n              placeholder='Email address'\n              value={emailAddress}\n              onChange={({ target }) => setEmailAddress(target.value)}\n            />\n            <Form.Input\n              type='password'\n              autoComplete='off'\n              placeholder='Password'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n            <Form.Submit disabled={isInvalid} type='submit'>\n              Sign Up\n            </Form.Submit>\n          </Form.Base>\n\n          <Form.Text>\n            Already a user? <Form.Link to='/signin'>Sign in now.</Form.Link>\n          </Form.Text>\n          <Form.TextSmall>\n            This page is protected by Google reCAPTCHA to ensure that you are\n            not a bot. Learn more.\n          </Form.TextSmall>\n        </Form>\n      </HeaderContainer>\n      <FooterContainer />;\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}