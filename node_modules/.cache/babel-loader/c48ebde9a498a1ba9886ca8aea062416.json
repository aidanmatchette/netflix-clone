{"ast":null,"code":"var _jsxFileName = \"/Users/aidanmatchette/quebec/projects/netflix/netflix-clone/src/pages/signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FooterContainer } from '../containers/footer';\nimport { HeaderContainer } from '../containers/header';\nimport { Form } from '../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signin() {\n  _s();\n\n  const [emailAddress, setEmailAddress] = useState();\n  const [password, setPassword] = useState();\n  /* eslint-disable */\n\n  const [error, setError] = useState('');\n  /* eslint-enable*/\n\n  const isInvalid = password === '' || emailAddress === '';\n\n  const handleSignIn = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Title, {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Form.Error, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Base, {\n          onSubmit: handleSignIn,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            placeholder: \"Email address\",\n            value: emailAddress,\n            onChange: target => setEmailAddress(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            type: \"password\",\n            autoComplete: \"off\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: target => setPassword(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Submit, {\n            disabled: isInvalid,\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [\"New to Netflix? \", /*#__PURE__*/_jsxDEV(Form.Link, {\n            to: \"/signup\",\n            children: \"Sign up now.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.TextSmall, {\n          children: \"This page is protected by Google reCAPTCHA to ensure that you are not a bot. Learn more.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n\n_s(Signin, \"74JkeFxXBVwvnRO+0CuTUVy8PtQ=\");\n\n_c = Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","FooterContainer","HeaderContainer","Form","Signin","emailAddress","setEmailAddress","password","setPassword","error","setError","isInvalid","handleSignIn","event","preventDefault","target","value"],"sources":["/Users/aidanmatchette/quebec/projects/netflix/netflix-clone/src/pages/signin.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { FooterContainer } from '../containers/footer'\nimport { HeaderContainer } from '../containers/header'\nimport { Form } from '../components'\n\nexport default function Signin() {\n  const [emailAddress, setEmailAddress] = useState()\n  const [password, setPassword] = useState()\n  /* eslint-disable */\n  const [error, setError] = useState('')\n  /* eslint-enable*/\n  const isInvalid = password === '' || emailAddress === ''\n\n  const handleSignIn = (event) => {\n    event.preventDefault()\n  }\n\n  return (\n    <>\n      <HeaderContainer>\n        <Form>\n          <Form.Title>Sign In</Form.Title>\n          {error && <Form.Error>{error}</Form.Error>}\n\n          <Form.Base onSubmit={handleSignIn} method='POST'>\n            <Form.Input\n              placeholder='Email address'\n              value={emailAddress}\n              onChange={(target) => setEmailAddress(target.value)}\n            />\n            <Form.Input\n              type='password'\n              autoComplete='off'\n              placeholder='Password'\n              value={password}\n              onChange={(target) => setPassword(target.value)}\n            />\n            <Form.Submit disabled={isInvalid} type='submit'>\n              Sign In\n            </Form.Submit>\n          </Form.Base>\n\n          <Form.Text>\n            New to Netflix? <Form.Link to='/signup'>Sign up now.</Form.Link>\n          </Form.Text>\n          <Form.TextSmall>\n            This page is protected by Google reCAPTCHA to ensure that you are\n            not a bot. Learn more.\n          </Form.TextSmall>\n        </Form>\n      </HeaderContainer>\n      <FooterContainer />;\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,IAAT,QAAqB,eAArB;;;AAEA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAC/B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,EAAhD;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;EACA;;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACA;;EACA,MAAMW,SAAS,GAAGJ,QAAQ,KAAK,EAAb,IAAmBF,YAAY,KAAK,EAAtD;;EAEA,MAAMO,YAAY,GAAIC,KAAD,IAAW;IAC9BA,KAAK,CAACC,cAAN;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,eAAD;MAAA,uBACE,QAAC,IAAD;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGL,KAAK,iBAAI,QAAC,IAAD,CAAM,KAAN;UAAA,UAAaA;QAAb;UAAA;UAAA;UAAA;QAAA,QAFZ,eAIE,QAAC,IAAD,CAAM,IAAN;UAAW,QAAQ,EAAEG,YAArB;UAAmC,MAAM,EAAC,MAA1C;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YACE,WAAW,EAAC,eADd;YAEE,KAAK,EAAEP,YAFT;YAGE,QAAQ,EAAGU,MAAD,IAAYT,eAAe,CAACS,MAAM,CAACC,KAAR;UAHvC;YAAA;YAAA;YAAA;UAAA,QADF,eAME,QAAC,IAAD,CAAM,KAAN;YACE,IAAI,EAAC,UADP;YAEE,YAAY,EAAC,KAFf;YAGE,WAAW,EAAC,UAHd;YAIE,KAAK,EAAET,QAJT;YAKE,QAAQ,EAAGQ,MAAD,IAAYP,WAAW,CAACO,MAAM,CAACC,KAAR;UALnC;YAAA;YAAA;YAAA;UAAA,QANF,eAaE,QAAC,IAAD,CAAM,MAAN;YAAa,QAAQ,EAAEL,SAAvB;YAAkC,IAAI,EAAC,QAAvC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAbF;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAsBE,QAAC,IAAD,CAAM,IAAN;UAAA,4CACkB,QAAC,IAAD,CAAM,IAAN;YAAW,EAAE,EAAC,SAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADlB;QAAA;UAAA;UAAA;UAAA;QAAA,QAtBF,eAyBE,QAAC,IAAD,CAAM,SAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAzBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAiCE,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QAjCF;EAAA,gBADF;AAqCD;;GAjDuBP,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}